user  www www;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream docker-registry{
        server registryv1:5000;
    }

    upstream docker-registry-v2{
        server registryv2:5000;
    }

    server{
        listen 443 ssl;
        server_name localhost;
    
        client_max_body_size 0;
        chunked_transfer_encoding on;

        ssl on;
        ssl_certificate /etc/nginx/ssl/docker-registry.crt;
        ssl_certificate_key /etc/nginx/ssl/docker-registry.key;

        proxy_set_header  Host              $http_host;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_read_timeout                  900;

        location /v2/{
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
              return 404;
            }
            add_header Docker-Distribution-Api-Version registry/2.0 always;
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;
            proxy_pass       http://docker-registry-v2;
        }

        location /{
            add_header Docker-Distribution-Api-Version registry/1.0 always;
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            add_header 'Docker-Distribution-Api-Version' 'registry/1.0' always;
            proxy_pass       http://docker-registry;
        }
    }
}
